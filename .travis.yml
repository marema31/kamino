language: go
sudo: false
matrix:
  include:
  - go: 1.11.x
  - go: 1.x
    env: LATEST=true
notifications:
  email: false
# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash. before_script:
before_script:
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/
  - go get golang.org/x/lint/golint                        # Linter
  - go get honnef.co/go/tools/cmd/staticcheck                     # Badass static analyzer/linter
  - go get github.com/fzipp/gocyclo

# script always run to completion (set +e). All of these code checks are must haves
# in a modern Go project.
script:
  - test -z $(gofmt -s -l $GO_FILES)         # Fail if a .go file hasn't been formatted with gofmt
  - go test -v ./... -race -coverprofile=coverage.txt -covermode=atomic  # Run all the tests with the race detector enabled
  - go vet ./...                             # go vet is the official Go static analyzer
  - staticcheck ./...                          # "go vet on steroids" + linter
  - gocyclo -over 19 $GO_FILES               # forbid code with huge functions
  - golint -set_exit_status $(go list ./...) # one last linter
  
  # push results to CodeCov
after_success:
  - bash <(curl -s https://codecov.io/bash)

deploy:
  - provider: script
    skip_cleanup: true
    script: curl -sL https://git.io/goreleaser | bash
    on:
      tags: true
      condition: $LATEST = true